/* .outTop {
    fill: #854fee;
}

.inTop {
    fill: #4d12c1;
} */
.outTop {
    fill: #caacb9;
}

.inTop {
    fill: #86556a;
}
.outRight {
    fill: #1fbcc5;
}

.inRight {
    fill: #158085;
}

.outBottom {
    fill: #79AA95
    /* fill: #caacb9; */
}

.inBottom {
    fill: #355346;
    /* fill: #383e51; */
}

.outLeft {
    fill:#EA7F7A;
    /* fill: #8FA1F7; */
}

.inLeft {
    fill:#E0433A;
    /* fill: #0045ea; */
}

/* .outTop {
    fill: #F0CF97;
}

.inTop {
    fill: #f77237;
}
.outRight {
    fill: #bb0d48;
}

.inRight {
    fill: #960c41;
}
.outBottom {
    fill: #5cb8cd;
}

.inBottom {
    fill: #00aabc;
}

.outLeft {
    fill: #152d39;
}
.inLeft {
    fill: #071c23;
} */



    
.commonText {
        font-family: 'Josefin Sans', sans-serif;
        font-size: 1.60rem;
        white-space: pre;
        fill:#DEE2E2;
        /* Replace with your desired text color */
    }


.container{
    padding: 0.75rem;
    width: 100%;        
    margin-right: auto;
    margin-left: auto;
}

.container {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    padding: 1rem;
}

body.button {
    margin: 0.5rem;
    padding: 0.5rem 1rem;
    font-size: 1rem;
}

#svgContainer {
    max-width: 100%;
    height: auto;
}

/* Add your CSS styles here */
/* Animation for spinning */
@keyframes spin {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

/* Apply the spinning animation to the SVG element when the 'play' class is added */
.play {
    animation: spin 10s linear infinite;
}

/* CSS animations for sliding */
.slideLeft { 
    animation: slideLeft 2s forwards ;
    text-orientation: initial;
}

.slideRight {
    animation: slideRight 1s forwards;
}

.slideUp {
    animation: slideUp 1s forwards;
}

.slideDown {
    animation: slideDown 1s forwards;
}

.textRotate {
    animation: textRotate 2s forwards;
}

/* #svgContainer {
    max-width: 25%;
    /* Set a maximum width as a percentage of its container */
   /* height: auto;
    /* Allow the height to adjust automatically */
   /* } */

/* Define the 180-degree rotation animation */
@keyframes textRotate {
    0% {
        transform: rotate(0deg);
    }
    50% {
        transform: rotate(180deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

/* Define slide animations for each direction */
@keyframes slideLeft {
    0% {
        transform:  rotate(30deg)  translateX(0);
    }

50% {
        transform: rotate(90deg) translateX(-25);
}

    100% {
        transform:  rotate(180deg)  translateX(-50vw);
    }
}

@keyframes slideRight {
    0% {
        transform: rotate(30deg) translateX(0);
    }
        50% {
            transform: rotate(90deg) translateX(25);
        }

    100% {
        transform: rotate(180deg) translateX(50vw);
    }
}

@keyframes slideUp {
    0% {
        transform: translateY(0);
    }

    100% {
        transform: translateY(-66vh);
    }
}

@keyframes slideDown {
    0% {
        transform: translateY(0);
    }

    100% {
        transform: translateY(66vh);
    }
}